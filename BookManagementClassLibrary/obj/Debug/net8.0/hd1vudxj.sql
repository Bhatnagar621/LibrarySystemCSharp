CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "Author" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" character varying(100) NOT NULL,
    "LastName" character varying(100) NOT NULL,
    "Description" character varying(500),
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_Author" PRIMARY KEY ("Id")
);

CREATE TABLE "Genre" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500),
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_Genre" PRIMARY KEY ("Id")
);

CREATE TABLE "Publisher" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(200) NOT NULL,
    "Website" character varying(500),
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_Publisher" PRIMARY KEY ("Id")
);

CREATE TABLE "User" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" character varying(100) NOT NULL,
    "LastName" character varying(100) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Password" character varying(100) NOT NULL,
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_User" PRIMARY KEY ("Id")
);

CREATE TABLE "Book" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Title" character varying(100) NOT NULL,
    "AuthorId" integer NOT NULL,
    "GenreId" integer NOT NULL,
    "PublisherId" integer NOT NULL,
    "PublishedDate" date NOT NULL,
    "ISBN" character varying(13) NOT NULL,
    "Price" numeric(5,2) NOT NULL,
    "Stock" integer NOT NULL,
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_Book" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Book_Author_AuthorId" FOREIGN KEY ("AuthorId") REFERENCES "Author" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Book_Genre_GenreId" FOREIGN KEY ("GenreId") REFERENCES "Genre" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Book_Publisher_PublisherId" FOREIGN KEY ("PublisherId") REFERENCES "Publisher" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Loan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "BookId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "loanDate" date NOT NULL,
    "dueDate" date NOT NULL,
    "LastUpdated" date NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_Loan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Loan_Book_BookId" FOREIGN KEY ("BookId") REFERENCES "Book" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Loan_User_UserId" FOREIGN KEY ("UserId") REFERENCES "User" ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_Book_AuthorId" ON "Book" ("AuthorId");

CREATE INDEX "IX_Book_GenreId" ON "Book" ("GenreId");

CREATE INDEX "IX_Book_PublisherId" ON "Book" ("PublisherId");

CREATE INDEX "IX_Loan_BookId" ON "Loan" ("BookId");

CREATE UNIQUE INDEX "IX_Loan_UserId" ON "Loan" ("UserId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240127072646_Init', '8.0.1');

COMMIT;

START TRANSACTION;

CREATE UNIQUE INDEX "IX_User_Email" ON "User" ("Email");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240127133423_CreatedIndexOnEmail', '8.0.1');

COMMIT;

